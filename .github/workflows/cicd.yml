name: CI/CD

on:
  push:
    branches:
      - github/actions
    paths:
      - sample-python-web-app/**
      - .github/workflows/cicd.yml
      - terraform/**

env:
  AWS_REGION: ap-northeast-1 # your AWS region
  ECR_REPOSITORY: dev/practice # your ECR repository name
  # TF_S3_BACKEND_BUCKET: self-dev-marukome # S3 bucket for Terraform state
  # TF_S3_BACKEND_KEY: github-actions/fargate # S3 bucket key for Terraform state
  # TF_VAR_FARGATE_IMAGE: "" # Docker image for Fargate service

jobs:
  build-and-push:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        # if: github.ref == 'refs/heads/github/actions'
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        id: login
        uses: aws-actions/amazon-ecr-login@v1

      - uses: mr-smithers-excellent/docker-build-push@v6
        name: Build & push Docker image
        env:
          ECR_REGISTRY: ${{ steps.login.outputs.registry }}
        with:
          registry: ${{ env.ECR_REGISTRY }}
          image: ${{ env.ECR_REPOSITORY }}
          tags: ${{ github.run_number }}
          dockerfile: ./sample-python-web-app/Dockerfile

      - name: Update terraform.tfvars
        run: |
          sed -i "s/^image_tag.*/image_tag = \"${{ github.run_number }}\"/" ./terraform/composition/dev/terraform.tfvars
      - name: Archive production artifacts
        uses: actions/upload-artifact@v2
        with:
          name: tfvars
          path: ./terraform/composition/dev/terraform.tfvars

  Deploy:
    runs-on: ubuntu-latest
    needs: build-and-push
    steps:
      - name: Download artifacts
        uses: actions/download-artifact@v2
        with:
          name: tfvars
          path: ./terraform/composition/dev/

      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Terraform code check and plan
        run: |
          cd ./terraform/composition/dev/
          terraform fmt -check
          terraform init -no-color -backend-config=backend-config.tfvars
          terraform validate -no-color
          terraform plan
