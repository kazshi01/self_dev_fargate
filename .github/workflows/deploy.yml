name: CI/CD

on:
  push:
    branches: 
      - main
      - github/actions
    paths:
    - sample-python-web-app/**
    - .github/workflows/**

env:
  AWS_REGION: ap-northeast-1 # your AWS region
  ECR_REPOSITORY: dev/practice # your ECR repository name
  # TF_S3_BACKEND_BUCKET: my-tf-backend-bucket # S3 bucket for Terraform state
  # TF_VAR_FARGATE_IMAGE: "" # Docker image for Fargate service

jobs:
  build-and-push:
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Configure AWS credentials
        # if: github.ref == 'refs/heads/github/actions'
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
          aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
          aws-region: ${{ env.AWS_REGION }}

      - name: Login to Amazon ECR
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build and Push Docker Image
        run: |
          IMAGE_TAG=${{ github.sha }}
          docker build -t $ECR_REPOSITORY:$IMAGE_TAG -f ./sample-python-web-app/Dockerfile .
          docker push $ECR_REPOSITORY:$IMAGE_TAG

      # - name: Update terraform.tfvars
      #   run: |
      #     sed -i '/^fargate_image/c\
      #     fargate_image = \"${{ github.ref_name }}-${{ github.sha }}\"' ./composition/dev/example.tfvars

      # - name: Commit and push changes
      #   run: |
      #     git config --global user.email "you@example.com"
      #     git config --global user.name "Your Name"
      #     git commit -am "Update Fargate service image"
      #     git push

  # deploy:
  #   needs: build-and-push
  #   runs-on: ubuntu-latest

  #   steps:
  #     - name: Checkout code
  #       uses: actions/checkout@v2

  #     - name: Configure AWS credentials
  #       uses: aws-actions/configure-aws-credentials@v2
  #       with:
  #         aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
  #         aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
  #         aws-region: ${{ env.AWS_REGION }}

  #     - name: Set up Terraform
  #       uses: hashicorp/setup-terraform@v1

  #     - name: Terraform Init
  #       run: terraform init

  #     - name: Terraform Apply
  #       run: terraform apply -auto-approve

